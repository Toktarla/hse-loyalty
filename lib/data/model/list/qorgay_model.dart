import 'dart:io';

import '../../../domain/entity/list/qorgay_entity.dart';
import 'attachments_item_model.dart';

class QorgayModel extends QorgayEntity {
  const QorgayModel({
    required String? organizationName,
    required bool? isInformed,
    required int? organizationDepartmentId,
    required int? organizationId,
    required List<AttachmentsItemModel>? attachments,
    required String? possibleConsequence,
    required String? suggestion,
    required String? contractor,
    required List<int>? dictKorgauObservationCategories,
    required bool? isDiscussed,
    required String? phone,
    required String? measure,
    required String? incidentDatetime,
    required List<File>? files,
    required String? actionToEncourage,
    required int? supervisedOrganizationId,
    required int? status,
    required int? dictKorgauObservationTypeId,
    required String? informTo,
    required String? phoneUID,
    required bool? isContractor,
    required bool? isEliminated,
    required String? fullName,
    required String? supervisedObject,
    required int? id,
  }) : super(
    organizationName: organizationName,
    isInformed: isInformed,
    organizationDepartmentId: organizationDepartmentId,
    organizationId: organizationId,
    attachments: attachments,
    possibleConsequence: possibleConsequence,
    suggestion: suggestion,
    contractor: contractor,
    dictKorgauObservationCategories: dictKorgauObservationCategories,
    isDiscussed: isDiscussed,
    phone: phone,
    measure: measure,
    incidentDatetime: incidentDatetime,
    files: files,
    actionToEncourage: actionToEncourage,
    supervisedOrganizationId: supervisedOrganizationId,
    status: status,
    dictKorgauObservationTypeId: dictKorgauObservationTypeId,
    informTo: informTo,
    phoneUID: phoneUID,
    isContractor: isContractor,
    isEliminated: isEliminated,
    fullName: fullName,
    supervisedObject: supervisedObject,
    id: id,
  );

  factory QorgayModel.fromJson(Map<String, dynamic> json) {
    return QorgayModel(
      organizationName: json['OrganizationName'] ?? "",
      isInformed: json['IsInformed'] ?? false,
      organizationDepartmentId: json['OrganizationDepartmentId'],
      organizationId: json['OrganizationId'],
      attachments: [],
      possibleConsequence: json['PossibleConsequence'] ?? "",
      suggestion: json['Suggestion'] ?? "",
      contractor: json['Contractor'] ?? "",
      dictKorgauObservationCategories: (json['DictKorgauObservationCategories'] as List<int>?)
          ?.map((item) => item)
          .toList(),
      isDiscussed: json['IsDiscussed'] ?? false,
      phone: json['Phone'] ?? "",
      measure: json['Measure'] ?? "",
      incidentDatetime: json['IncidentDatetime'] ?? "",
      files: json['Files'] != null ? (json['Files'] as List<File>).cast<File>() : [],
      actionToEncourage: json['ActionToEncourage'] ?? "",
      supervisedOrganizationId: json['SupervisedOrganizationId'] ?? -1,
      status: json['Status'] ?? false,
      dictKorgauObservationTypeId: json['DictKorgauObservationTypeId'] ?? -1,
      informTo: json['InformTo'] ?? "",
      phoneUID: json['PhoneUID'] ?? "",
      isContractor: json['IsContractor'] ?? false,
      isEliminated: json['IsEliminated'] ?? false,
      fullName: json['FullName'] ?? "",
      supervisedObject: json['SupervisedObject'] ?? "",
      id: json['Id'] ?? -1,
    );
  }


  Map<String, dynamic> toJson() {
    return {
      'OrganizationName': organizationName,
      'IsInformed': isInformed,
      'OrganizationDepartmentId': organizationDepartmentId,
      'OrganizationId': organizationId,
      'Attachments': attachments?.map((item) => item.toModel().toJson()).toList(),
      'PossibleConsequence': possibleConsequence,
      'Suggestion': suggestion,
      'Contractor': contractor,
      'DictKorgauObservationCategories': dictKorgauObservationCategories,
      'IsDiscussed': isDiscussed,
      'Phone': phone,
      'Measure': measure,
      'IncidentDatetime': incidentDatetime,
      'Files': files,
      'ActionToEncourage': actionToEncourage,
      'SupervisedOrganizationId': supervisedOrganizationId,
      'Status': status,
      'DictKorgauObservationTypeId': dictKorgauObservationTypeId,
      'InformTo': informTo,
      'PhoneUID': phoneUID,
      'IsContractor': isContractor,
      'IsEliminated': isEliminated,
      'FullName': fullName,
      'SupervisedObject': supervisedObject,
      'Id': id,
    };
  }

  QorgayEntity toEntity() {
    return QorgayEntity(
      organizationName: organizationName,
      isInformed: isInformed,
      organizationDepartmentId: organizationDepartmentId,
      organizationId: organizationId,
      attachments: attachments,
      possibleConsequence: possibleConsequence,
      suggestion: suggestion,
      contractor: contractor,
      dictKorgauObservationCategories: dictKorgauObservationCategories,
      isDiscussed: isDiscussed,
      phone: phone,
      measure: measure,
      incidentDatetime: incidentDatetime,
      files: files,
      actionToEncourage: actionToEncourage,
      supervisedOrganizationId: supervisedOrganizationId,
      status: status,
      dictKorgauObservationTypeId: dictKorgauObservationTypeId,
      informTo: informTo,
      phoneUID: phoneUID,
      isContractor: isContractor,
      isEliminated: isEliminated,
      fullName: fullName,
      supervisedObject: supervisedObject,
      id: id,
    );
  }
}