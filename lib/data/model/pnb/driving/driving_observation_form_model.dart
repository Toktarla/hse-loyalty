import 'package:hsg_loyalty/data/model/pnb/answer_categories_item_model.dart';

import '../../../../domain/entity/pnb/answer_categories_item_entity.dart';
import '../../../../domain/entity/pnb/driving/pnb_driving_observation_form_entity.dart';

class PnbDrivingObservationFormModel extends PnbDrivingObservationFormEntity {
  const PnbDrivingObservationFormModel({
    required int organizationDepartmentId,
    required String endDate,
    required String endTime,
    required String startDate,
    required String startTime,
    required int category5,
    required int authorDrivingExperience,
    required int category4,
    required int category3,
    required int category2,
    required int category1,
    required int category9,
    required int category8,
    required int category7,
    required int category6,
    required String comment1,
    required String comment2,
    required String authorOrganizationName,
    required String comment5,
    required int category10,
    required String comment6,
    required String comment3,
    required int category12,
    required String comment4,
    required int category11,
    required String comment9,
    required String comment7,
    required String comment8,
    required int authorOrganizationId,
    required String id,
    required String authorFullname,
    required String comment11,
    required int organizationId,
    required String comment10,
    required int category14,
    required int category13,
    required int category16,
    required int category15,
    required int category18,
    required int category17,
    required int category19,
    required int authorOrganizationDepartmentId,
    required int drivingExperience,
    required String comment17,
    required String comment16,
    required String comment19,
    required String comment18,
    required String comment13,
    required String comment12,
    required String comment15,
    required String comment14,
    required String authorOrganizationDepartmentName,
    required List<AnswerCategoriesItemModel> answerCategories,
    required String location,
  }) : super(
    organizationDepartmentId: organizationDepartmentId,
    endDate: endDate,
    endTime: endTime,
    startDate: startDate,
    startTime: startTime,
    category5: category5,
    authorDrivingExperience: authorDrivingExperience,
    category4: category4,
    category3: category3,
    category2: category2,
    category1: category1,
    category9: category9,
    category8: category8,
    category7: category7,
    category6: category6,
    comment1: comment1,
    comment2: comment2,
    authorOrganizationName: authorOrganizationName,
    comment5: comment5,
    category10: category10,
    comment6: comment6,
    comment3: comment3,
    category12: category12,
    comment4: comment4,
    category11: category11,
    comment9: comment9,
    comment7: comment7,
    comment8: comment8,
    authorOrganizationId: authorOrganizationId,
    id: id,
    authorFullname: authorFullname,
    comment11: comment11,
    organizationId: organizationId,
    comment10: comment10,
    category14: category14,
    category13: category13,
    category16: category16,
    category15: category15,
    category18: category18,
    category17: category17,
    category19: category19,
    authorOrganizationDepartmentId: authorOrganizationDepartmentId,
    drivingExperience: drivingExperience,
    comment17: comment17,
    comment16: comment16,
    comment19: comment19,
    comment18: comment18,
    comment13: comment13,
    comment12: comment12,
    comment15: comment15,
    comment14: comment14,
    authorOrganizationDepartmentName: authorOrganizationDepartmentName,
    answerCategories: answerCategories,
    location: location,
  );

  factory PnbDrivingObservationFormModel.fromJson(Map<String, dynamic> json) {
    return PnbDrivingObservationFormModel(
      organizationDepartmentId: json['OrganizationDepartmentId'],
      endDate: json['EndDate'],
      endTime: json['EndTime'],
      startDate: json['StartDate'],
      startTime: json['StartTime'],
      category5: json['Category5'],
      authorDrivingExperience: json['AuthorDrivingExperience'],
      category4: json['Category4'],
      category3: json['Category3'],
      category2: json['Category2'],
      category1: json['Category1'],
      category9: json['Category9'],
      category8: json['Category8'],
      category7: json['Category7'],
      category6: json['Category6'],
      comment1: json['Comment1'],
      comment2: json['Comment2'],
      authorOrganizationName: json['AuthorOrganizationName'],
      comment5: json['Comment5'],
      category10: json['Category10'],
      comment6: json['Comment6'],
      comment3: json['Comment3'],
      category12: json['Category12'],
      comment4: json['Comment4'],
      category11: json['Category11'],
      comment9: json['Comment9'],
      comment7: json['Comment7'],
      comment8: json['Comment8'],
      authorOrganizationId: json['AuthorOrganizationId'],
      id: json['Id'],
      authorFullname: json['AuthorFullname'],
      comment11: json['Comment11'],
      organizationId: json['OrganizationId'],
      comment10: json['Comment10'],
      category14: json['Category14'],
      category13: json['Category13'],
      category16: json['Category16'],
      category15: json['Category15'],
      category18: json['Category18'],
      category17: json['Category17'],
      category19: json['Category19'],
      authorOrganizationDepartmentId: json['AuthorOrganizationDepartmentId'],
      drivingExperience: json['DrivingExperience'],
      comment17: json['Comment17'],
      comment16: json['Comment16'],
      comment19: json['Comment19'],
      comment18: json['Comment18'],
      comment13: json['Comment13'],
      comment12: json['Comment12'],
      comment15: json['Comment15'],
      comment14: json['Comment14'],
      authorOrganizationDepartmentName: json['AuthorOrganizationDepartmentName'],
      answerCategories: (json['AnswerCategories'] as List)
          .map((item) => AnswerCategoriesItemModel.fromJson(item))
          .toList(),
      location: json['Location'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'OrganizationDepartmentId': organizationDepartmentId,
      'EndDate': endDate,
      'EndTime': endTime,
      'StartDate': startDate,
      'StartTime': startTime,
      'Category5': category5,
      'AuthorDrivingExperience': authorDrivingExperience,
      'Category4': category4,
      'Category3': category3,
      'Category2': category2,
      'Category1': category1,
      'Category9': category9,
      'Category8': category8,
      'Category7': category7,
      'Category6': category6,
      'Comment1': comment1,
      'Comment2': comment2,
      'AuthorOrganizationName': authorOrganizationName,
      'Comment5': comment5,
      'Category10': category10,
      'Comment6': comment6,
      'Comment3': comment3,
      'Category12': category12,
      'Comment4': comment4,
      'Category11': category11,
      'Comment9': comment9,
      'Comment7': comment7,
      'Comment8': comment8,
      'AuthorOrganizationId': authorOrganizationId,
      'Id': id,
      'AuthorFullname': authorFullname,
      'Comment11': comment11,
      'OrganizationId': organizationId,
      'Comment10': comment10,
      'Category14': category14,
      'Category13': category13,
      'Category16': category16,
      'Category15': category15,
      'Category18': category18,
      'Category17': category17,
      'Category19': category19,
      'AuthorOrganizationDepartmentId': authorOrganizationDepartmentId,
      'DrivingExperience': drivingExperience,
      'Comment17': comment17,
      'Comment16': comment16,
      'Comment19': comment19,
      'Comment18': comment18,
      'Comment13': comment13,
      'Comment12': comment12,
      'Comment15': comment15,
      'Comment14': comment14,
      'AuthorOrganizationDepartmentName': authorOrganizationDepartmentName,
      'AnswerCategories': answerCategories.map((e) => e.toJson()).toList(),
      'Location': location,
    };
  }

  factory PnbDrivingObservationFormModel.fromEntity(PnbDrivingObservationFormEntity entity) {
    return PnbDrivingObservationFormModel(
      organizationDepartmentId: entity.organizationDepartmentId,
      endDate: entity.endDate,
      endTime: entity.endTime,
      startDate: entity.startDate,
      startTime: entity.startTime,
      category5: entity.category5,
      authorDrivingExperience: entity.authorDrivingExperience,
      category4: entity.category4,
      category3: entity.category3,
      category2: entity.category2,
      category1: entity.category1,
      category9: entity.category9,
      category8: entity.category8,
      category7: entity.category7,
      category6: entity.category6,
      comment1: entity.comment1,
      comment2: entity.comment2,
      authorOrganizationName: entity.authorOrganizationName,
      comment5: entity.comment5,
      category10: entity.category10,
      comment6: entity.comment6,
      comment3: entity.comment3,
      category12: entity.category12,
      comment4: entity.comment4,
      category11: entity.category11,
      comment9: entity.comment9,
      comment7: entity.comment7,
      comment8: entity.comment8,
      authorOrganizationId: entity.authorOrganizationId,
      id: entity.id,
      authorFullname: entity.authorFullname,
      comment11: entity.comment11,
      organizationId: entity.organizationId,
      comment10: entity.comment10,
      category14: entity.category14,
      category13: entity.category13,
      category16: entity.category16,
      category15: entity.category15,
      category18: entity.category18,
      category17: entity.category17,
      category19: entity.category19,
      authorOrganizationDepartmentId: entity.authorOrganizationDepartmentId,
      drivingExperience: entity.drivingExperience,
      comment17: entity.comment17,
      comment16: entity.comment16,
      comment19: entity.comment19,
      comment18: entity.comment18,
      comment13: entity.comment13,
      comment12: entity.comment12,
      comment15: entity.comment15,
      comment14: entity.comment14,
      authorOrganizationDepartmentName: entity.authorOrganizationDepartmentName,
      answerCategories: entity.answerCategories,
      location: entity.location,
    );
  }
}